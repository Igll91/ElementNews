<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
		
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.sqlite.JDBC" />
		<property name="url" value="jdbc:sqlite://C:\Users\Silvio\Databases\Element.db" />
		<property name="username" value="test" />
		<property name="password" value="test" />
	</bean>
	
	<security:http auto-config="true" use-expressions="true" >
		<security:access-denied-handler
			error-page="/login/access_denied.html" />
			
		<security:form-login 
			login-page="/login/login.html"
			always-use-default-target="true" default-target-url="/"
			authentication-failure-url="/login/failure.html"
			 />
		<security:logout 
		invalidate-session="true"
		logout-success-url="/login/logout.html"
		delete-cookies="userKey"/>
		<security:remember-me key="userKey"
			token-validity-seconds="7200" 
			/>

		<!-- intercept url has top-bottom rule! -->
		<security:intercept-url pattern="/login/*"
			access="isAnonymous()" />
		<security:intercept-url pattern="/*" 
			access="hasRole('default')" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<!-- dodati salt -->
			<security:password-encoder hash="sha-256">
			</security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="SELECT username, password, enabled FROM table_users WHERE username = ?"
				authorities-by-username-query="SELECT username, rolename FROM table_user_role JOIN table_users ON userid = table_users.id JOIN table_roles ON role = table_roles.id WHERE username = ?" />
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>
